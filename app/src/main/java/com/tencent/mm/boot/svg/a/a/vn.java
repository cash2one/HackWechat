package com.tencent.mm.boot.svg.a.a;

import android.graphics.Canvas;
import android.graphics.Matrix;
import android.graphics.Paint;
import android.graphics.Paint.Cap;
import android.graphics.Paint.Join;
import android.graphics.Paint.Style;
import android.graphics.Path;
import android.os.Looper;
import com.tencent.mm.plugin.appbrand.jsapi.JsApiOpenWeRunSetting;
import com.tencent.mm.svg.WeChatSVGRenderC2Java;
import com.tencent.mm.svg.c;
import com.tencent.smtt.sdk.WebView;

public final class vn extends c {
    private final int height = JsApiOpenWeRunSetting.CTRL_INDEX;
    private final int width = 666;

    protected final int b(int i, Object... objArr) {
        switch (i) {
            case 0:
                return 666;
            case 1:
                return JsApiOpenWeRunSetting.CTRL_INDEX;
            case 2:
                Canvas canvas = (Canvas) objArr[0];
                Looper looper = (Looper) objArr[1];
                Matrix f = c.f(looper);
                float[] e = c.e(looper);
                Paint i2 = c.i(looper);
                i2.setFlags(385);
                i2.setStyle(Style.FILL);
                Paint i3 = c.i(looper);
                i3.setFlags(385);
                i3.setStyle(Style.STROKE);
                i2.setColor(WebView.NIGHT_MODE_COLOR);
                i3.setStrokeWidth(1.0f);
                i3.setStrokeCap(Cap.BUTT);
                i3.setStrokeJoin(Join.MITER);
                i3.setStrokeMiter(4.0f);
                i3.setPathEffect(null);
                c.a(i3, looper).setStrokeWidth(1.0f);
                Paint a = c.a(i2, looper);
                a.setColor(-5066062);
                canvas.save();
                Paint a2 = c.a(a, looper);
                Path j = c.j(looper);
                j.moveTo(491.5881f, 223.8092f);
                j.lineTo(497.9307f, 221.9777f);
                j.cubicTo(476.8635f, 148.9817f, 409.0254f, 98.0f, 332.967f, 98.0f);
                j.cubicTo(256.9053f, 98.0f, 189.0705f, 148.985f, 168.0f, 221.9876f);
                j.lineTo(174.3426f, 223.8158f);
                j.cubicTo(179.4048f, 206.2664f, 187.2819f, 190.0436f, 197.3898f, 175.5731f);
                j.cubicTo(207.2733f, 179.9225f, 218.8464f, 183.7307f, 231.7197f, 186.9152f);
                j.cubicTo(227.6079f, 197.9702f, 224.265f, 209.7908f, 221.8626f, 222.2747f);
                j.lineTo(228.3471f, 223.5221f);
                j.cubicTo(230.733f, 211.1141f, 234.066f, 199.3826f, 238.1745f, 188.453f);
                j.cubicTo(265.0233f, 194.4755f, 296.7627f, 197.891f, 329.667f, 198.1088f);
                j.lineTo(329.667f, 222.905f);
                j.lineTo(336.267f, 222.905f);
                j.lineTo(336.267f, 198.1088f);
                j.cubicTo(369.168f, 197.891f, 400.9107f, 194.4755f, 427.7595f, 188.453f);
                j.cubicTo(431.868f, 199.3826f, 435.201f, 211.1141f, 437.5869f, 223.5221f);
                j.lineTo(444.0714f, 222.2747f);
                j.cubicTo(441.669f, 209.7908f, 438.3261f, 197.9702f, 434.2143f, 186.9152f);
                j.cubicTo(447.0876f, 183.7307f, 458.6607f, 179.9225f, 468.5442f, 175.5731f);
                j.cubicTo(478.6521f, 190.0403f, 486.5259f, 206.2631f, 491.5881f, 223.8092f);
                j.lineTo(491.5881f, 223.8092f);
                j.close();
                j.moveTo(415.3878f, 126.8288f);
                j.cubicTo(410.5467f, 128.2082f, 405.5901f, 129.4622f, 400.5246f, 130.5875f);
                j.cubicTo(392.8818f, 122.4035f, 384.579f, 115.5857f, 375.7779f, 110.3387f);
                j.cubicTo(389.7204f, 114.1238f, 403.0326f, 119.681f, 415.3878f, 126.8288f);
                j.lineTo(415.3878f, 126.8288f);
                j.close();
                j.moveTo(329.667f, 137.6957f);
                j.cubicTo(310.1145f, 137.5043f, 290.9712f, 135.6299f, 272.9796f, 132.1583f);
                j.cubicTo(289.5324f, 115.5494f, 309.0717f, 105.6626f, 329.667f, 104.7023f);
                j.lineTo(329.667f, 137.6957f);
                j.lineTo(329.667f, 137.6957f);
                j.close();
                j.moveTo(336.267f, 104.7023f);
                j.cubicTo(356.8656f, 105.6626f, 376.4082f, 115.5527f, 392.9643f, 132.1682f);
                j.cubicTo(374.976f, 135.6398f, 355.8294f, 137.5043f, 336.267f, 137.6957f);
                j.lineTo(336.267f, 104.7023f);
                j.lineTo(336.267f, 104.7023f);
                j.close();
                j.moveTo(265.4028f, 130.5974f);
                j.cubicTo(260.334f, 129.4721f, 255.3972f, 128.2016f, 250.5627f, 126.8189f);
                j.cubicTo(262.9113f, 119.6744f, 276.2202f, 114.1205f, 290.1561f, 110.3387f);
                j.cubicTo(281.3517f, 115.589f, 273.0423f, 122.4101f, 265.4028f, 130.5974f);
                j.lineTo(265.4028f, 130.5974f);
                j.close();
                j.moveTo(201.3762f, 170.1149f);
                j.cubicTo(212.9592f, 154.9019f, 227.0997f, 141.8504f, 243.0288f, 131.4719f);
                j.cubicTo(248.6586f, 133.2275f, 254.4666f, 134.8082f, 260.4264f, 136.214f);
                j.cubicTo(250.0677f, 148.6088f, 241.1412f, 163.6436f, 234.1386f, 180.7244f);
                j.cubicTo(221.8989f, 177.7346f, 210.8571f, 174.1739f, 201.3762f, 170.1149f);
                j.lineTo(201.3762f, 170.1149f);
                j.close();
                j.moveTo(240.6231f, 182.249f);
                j.cubicTo(247.8039f, 164.9636f, 257.0076f, 149.9123f, 267.6666f, 137.798f);
                j.cubicTo(287.2422f, 141.8702f, 308.2203f, 144.0878f, 329.667f, 144.2957f);
                j.lineTo(329.667f, 191.5088f);
                j.cubicTo(297.6141f, 191.2943f, 266.7492f, 188.0174f, 240.6231f, 182.249f);
                j.lineTo(240.6231f, 182.249f);
                j.close();
                j.moveTo(336.267f, 191.5088f);
                j.lineTo(336.267f, 144.2924f);
                j.cubicTo(357.7302f, 144.0878f, 378.6951f, 141.8702f, 398.2674f, 137.798f);
                j.cubicTo(408.9264f, 149.9123f, 418.1301f, 164.9603f, 425.3109f, 182.2457f);
                j.cubicTo(399.1815f, 188.0174f, 368.3199f, 191.2943f, 336.267f, 191.5088f);
                j.lineTo(336.267f, 191.5088f);
                j.close();
                j.moveTo(431.7954f, 180.7244f);
                j.cubicTo(424.7928f, 163.6502f, 415.8729f, 148.6187f, 405.5175f, 136.2272f);
                j.cubicTo(411.474f, 134.8214f, 417.2589f, 133.2176f, 422.892f, 131.462f);
                j.cubicTo(438.8277f, 141.8405f, 452.9715f, 154.8986f, 464.5578f, 170.1149f);
                j.cubicTo(455.0769f, 174.1739f, 444.0351f, 177.7346f, 431.7954f, 180.7244f);
                j.lineTo(431.7954f, 180.7244f);
                j.close();
                WeChatSVGRenderC2Java.setFillType(j, 2);
                canvas.drawPath(j, a2);
                canvas.restore();
                canvas.save();
                a2 = c.a(a, looper);
                j = c.j(looper);
                j.moveTo(34.1f, 66.69298f);
                j.cubicTo(37.867435f, 66.69298f, 40.9209f, 63.60843f, 40.9209f, 59.799835f);
                j.cubicTo(40.9209f, 55.993515f, 37.867435f, 52.906693f, 34.1f, 52.906693f);
                j.cubicTo(30.33481f, 52.906693f, 27.281347f, 55.993515f, 27.281347f, 59.799835f);
                j.cubicTo(27.281347f, 63.60843f, 30.33481f, 66.69298f, 34.1f, 66.69298f);
                j.moveTo(68.20225f, 66.69298f);
                j.cubicTo(71.96744f, 66.69298f, 75.0209f, 63.60843f, 75.0209f, 59.799835f);
                j.cubicTo(75.0209f, 55.993515f, 71.96744f, 52.906693f, 68.20225f, 52.906693f);
                j.cubicTo(64.43481f, 52.906693f, 61.381348f, 55.993515f, 61.381348f, 59.799835f);
                j.cubicTo(61.381348f, 63.60843f, 64.43481f, 66.69298f, 68.20225f, 66.69298f);
                j.moveTo(17.674164f, 106.1589f);
                j.cubicTo(6.890499f, 98.258f, -8.526513E-14f, 86.571205f, -8.526513E-14f, 73.59067f);
                j.cubicTo(-8.526513E-14f, 49.790363f, 22.900974f, 30.5f, 51.15f, 30.5f);
                j.cubicTo(79.399025f, 30.5f, 102.3f, 49.790363f, 102.3f, 73.59067f);
                j.cubicTo(102.3f, 97.38643f, 79.399025f, 116.67906f, 51.15f, 116.67906f);
                j.cubicTo(45.314743f, 116.67906f, 39.679306f, 115.834724f, 34.454742f, 114.316284f);
                j.cubicTo(33.97876f, 114.17102f, 33.47359f, 114.08931f, 32.950462f, 114.08931f);
                j.cubicTo(31.96931f, 114.08931f, 31.075724f, 114.39118f, 30.233776f, 114.88371f);
                j.lineTo(19.039242f, 121.41824f);
                j.cubicTo(18.724915f, 121.599815f, 18.421814f, 121.74054f, 18.051355f, 121.74054f);
                j.cubicTo(17.11062f, 121.74054f, 16.347254f, 120.968834f, 16.347254f, 120.01782f);
                j.cubicTo(16.347254f, 119.59111f, 16.515644f, 119.164406f, 16.621168f, 118.758125f);
                j.cubicTo(16.68628f, 118.51299f, 18.064827f, 113.313065f, 18.926981f, 110.065094f);
                j.cubicTo(19.02577f, 109.69967f, 19.106598f, 109.34786f, 19.106598f, 108.966545f);
                j.cubicTo(19.106598f, 107.80899f, 18.540808f, 106.78307f, 17.674164f, 106.1589f);
                WeChatSVGRenderC2Java.setFillType(j, 2);
                canvas.drawPath(j, a2);
                canvas.restore();
                canvas.save();
                a2 = c.a(a, looper);
                e = c.a(e, -0.9659258f, 0.25881904f, 1165.7078f, 0.25881904f, 0.9659258f, -153.46835f);
                f.reset();
                f.setValues(e);
                canvas.concat(f);
                j = c.j(looper);
                j.moveTo(593.84625f, 90.27849f);
                j.cubicTo(603.1084f, 99.54061f, 611.88434f, 103.884865f, 615.12976f, 103.63047f);
                j.cubicTo(618.3751f, 103.37607f, 626.45703f, 97.818115f, 630.2724f, 97.8921f);
                j.cubicTo(632.1061f, 97.92765f, 644.08856f, 106.03143f, 645.53906f, 106.96836f);
                j.cubicTo(646.98956f, 107.90529f, 648.3345f, 108.99974f, 648.0816f, 110.38466f);
                j.cubicTo(647.8287f, 111.769585f, 642.5625f, 127.02445f, 629.118f, 124.912f);
                j.cubicTo(615.6734f, 122.79955f, 596.9298f, 108.3061f, 586.24927f, 97.875496f);
                j.lineTo(593.84625f, 90.27849f);
                j.lineTo(593.84625f, 90.27849f);
                j.close();
                j.moveTo(593.84625f, 90.27849f);
                j.cubicTo(584.58417f, 81.01637f, 580.2399f, 72.24041f, 580.4943f, 68.995026f);
                j.cubicTo(580.7487f, 65.74963f, 586.30664f, 57.667717f, 586.23267f, 53.85239f);
                j.cubicTo(586.19714f, 52.01871f, 578.0933f, 40.036186f, 577.15643f, 38.5857f);
                j.cubicTo(576.2195f, 37.135216f, 575.125f, 35.7903f, 573.7401f, 36.043186f);
                j.cubicTo(572.35516f, 36.296078f, 557.10034f, 41.56226f, 559.21277f, 55.00681f);
                j.cubicTo(561.3252f, 68.45136f, 575.81866f, 87.19494f, 586.24927f, 97.875496f);
                j.lineTo(593.84625f, 90.27849f);
                j.lineTo(593.84625f, 90.27849f);
                j.close();
                WeChatSVGRenderC2Java.setFillType(j, 2);
                canvas.drawPath(j, a2);
                canvas.restore();
                canvas.save();
                float[] a3 = c.a(e, -1.0f, 0.0f, 538.5f, 0.0f, 1.0f, 0.0f);
                f.reset();
                f.setValues(a3);
                canvas.concat(f);
                canvas.save();
                Paint a4 = c.a(a, looper);
                j = c.j(looper);
                j.moveTo(391.6935f, 51.4931f);
                j.cubicTo(387.9414f, 49.2557f, 383.9913f, 47.0579f, 379.9587f, 44.9591f);
                j.lineTo(383.0046f, 39.1016f);
                j.cubicTo(387.1494f, 41.2598f, 391.2117f, 43.5236f, 395.0727f, 45.8237f);
                j.lineTo(391.6935f, 51.4931f);
                j.lineTo(391.6935f, 51.4931f);
                j.close();
                j.moveTo(39.1281f, 40.5866f);
                j.lineTo(36.3066f, 34.6202f);
                j.cubicTo(40.3656f, 32.6996f, 44.6094f, 30.8219f, 48.9093f, 29.0366f);
                j.lineTo(51.4371f, 35.1317f);
                j.cubicTo(47.2329f, 36.8741f, 43.0947f, 38.7122f, 39.1281f, 40.5866f);
                j.lineTo(39.1281f, 40.5866f);
                j.close();
                j.moveTo(367.8675f, 39.062f);
                j.cubicTo(363.8646f, 37.2338f, 359.6967f, 35.4518f, 355.4826f, 33.7655f);
                j.lineTo(357.9378f, 27.6374f);
                j.cubicTo(362.2476f, 29.3666f, 366.5112f, 31.1882f, 370.6065f, 33.0593f);
                j.lineTo(367.8675f, 39.062f);
                j.lineTo(367.8675f, 39.062f);
                j.close();
                j.moveTo(64.0002f, 30.2444f);
                j.lineTo(61.743f, 24.0437f);
                j.cubicTo(65.9769f, 22.5026f, 70.356f, 21.0077f, 74.7615f, 19.6052f);
                j.lineTo(76.7679f, 25.8917f);
                j.cubicTo(72.4482f, 27.2678f, 68.1516f, 28.733f, 64.0002f, 30.2444f);
                j.lineTo(64.0002f, 30.2444f);
                j.close();
                j.moveTo(342.8535f, 29.0234f);
                j.cubicTo(338.7087f, 27.5615f, 334.3956f, 26.1458f, 330.0429f, 24.806f);
                j.lineTo(331.9833f, 18.4964f);
                j.cubicTo(336.4185f, 19.8626f, 340.8141f, 21.308f, 345.048f, 22.7963f);
                j.lineTo(342.8535f, 29.0234f);
                j.lineTo(342.8535f, 29.0234f);
                j.close();
                j.moveTo(89.7072f, 22.0373f);
                j.lineTo(87.9384f, 15.6782f);
                j.cubicTo(92.2911f, 14.4737f, 96.7692f, 13.3187f, 101.2506f, 12.2462f);
                j.lineTo(102.7818f, 18.6647f);
                j.cubicTo(98.3796f, 19.7174f, 93.9807f, 20.8526f, 89.7072f, 22.0373f);
                j.lineTo(89.7072f, 22.0373f);
                j.close();
                j.moveTo(317.064f, 21.0869f);
                j.cubicTo(312.7674f, 19.9418f, 308.3553f, 18.8495f, 303.9498f, 17.8397f);
                j.lineTo(305.4282f, 11.408f);
                j.cubicTo(309.903f, 12.431f, 314.391f, 13.5431f, 318.7668f, 14.7113f);
                j.lineTo(317.064f, 21.0869f);
                j.lineTo(317.064f, 21.0869f);
                j.close();
                j.moveTo(115.9818f, 15.7541f);
                j.lineTo(114.6651f, 9.2861f);
                j.cubicTo(119.1168f, 8.3852f, 123.6609f, 7.5404f, 128.1687f, 6.7748f);
                j.lineTo(129.2709f, 13.2824f);
                j.cubicTo(124.8291f, 14.0348f, 120.3609f, 14.8664f, 115.9818f, 15.7541f);
                j.lineTo(115.9818f, 15.7541f);
                j.close();
                j.moveTo(290.7267f, 15.0479f);
                j.cubicTo(286.3707f, 14.2031f, 281.8926f, 13.4111f, 277.4145f, 12.695f);
                j.lineTo(278.4606f, 6.1775f);
                j.cubicTo(283.008f, 6.9068f, 287.5587f, 7.712f, 291.9807f, 8.57f);
                j.lineTo(290.7267f, 15.0479f);
                j.lineTo(290.7267f, 15.0479f);
                j.close();
                j.moveTo(142.6326f, 11.2397f);
                j.lineTo(141.735f, 4.7024f);
                j.cubicTo(146.2329f, 4.0853f, 150.777f, 3.5375f, 155.3607f, 3.0491f);
                j.lineTo(156.057f, 9.6128f);
                j.cubicTo(151.536f, 10.0913f, 147.0645f, 10.6358f, 142.6326f, 11.2397f);
                j.lineTo(142.6326f, 11.2397f);
                j.close();
                j.moveTo(264.0363f, 10.7645f);
                j.cubicTo(259.6011f, 10.1969f, 255.1197f, 9.6887f, 250.5954f, 9.2465f);
                j.lineTo(251.2356f, 2.6795f);
                j.cubicTo(255.8259f, 3.125f, 260.3733f, 3.6398f, 264.8745f, 4.2206f);
                j.lineTo(264.0363f, 10.7645f);
                j.lineTo(264.0363f, 10.7645f);
                j.close();
                j.moveTo(169.5276f, 8.3918f);
                j.lineTo(169.026f, 1.8116f);
                j.cubicTo(173.5536f, 1.4651f, 178.1208f, 1.1879f, 182.7177f, 0.9734f);
                j.lineTo(183.0279f, 7.5668f);
                j.cubicTo(178.4937f, 7.778f, 173.9925f, 8.0519f, 169.5276f, 8.3918f);
                j.lineTo(169.5276f, 8.3918f);
                j.close();
                j.moveTo(237.1182f, 8.1311f);
                j.cubicTo(232.65f, 7.8275f, 228.1455f, 7.5866f, 223.608f, 7.4084f);
                j.lineTo(223.8654f, 0.815f);
                j.cubicTo(228.4656f, 0.9932f, 233.0361f, 1.2374f, 237.567f, 1.5476f);
                j.lineTo(237.1182f, 8.1311f);
                j.lineTo(237.1182f, 8.1311f);
                j.close();
                j.moveTo(196.5447f, 7.1279f);
                j.lineTo(196.4259f, 0.5279f);
                j.cubicTo(199.3134f, 0.4784f, 202.1085f, 0.4223f, 205.1346f, 0.452f);
                j.cubicTo(206.8077f, 0.452f, 208.4775f, 0.4619f, 210.1506f, 0.4784f);
                j.lineTo(210.078f, 7.0784f);
                j.cubicTo(208.3488f, 7.0586f, 206.6856f, 7.0619f, 204.8772f, 7.052f);
                j.cubicTo(202.0854f, 7.052f, 199.3068f, 7.0784f, 196.5447f, 7.1279f);
                j.lineTo(196.5447f, 7.1279f);
                j.close();
                WeChatSVGRenderC2Java.setFillType(j, 2);
                canvas.drawPath(j, a4);
                canvas.restore();
                canvas.save();
                i2 = c.a(a, looper);
                Path j2 = c.j(looper);
                j2.moveTo(37.2009f, 53.5655f);
                j2.lineTo(24.0669f, 44.5433f);
                j2.lineTo(21.4467f, 28.8254f);
                j2.lineTo(0.0f, 59.8652f);
                j2.lineTo(37.2009f, 53.5655f);
                WeChatSVGRenderC2Java.setFillType(j2, 2);
                canvas.drawPath(j2, i2);
                canvas.restore();
                canvas.restore();
                c.h(looper);
                break;
        }
        return 0;
    }
}
